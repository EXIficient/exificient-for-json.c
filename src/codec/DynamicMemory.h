/*
 * Copyright (C) 2007-2016 Siemens AG
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
 * associated documentation files (the "Software"), to deal in the Software without restriction, 
 * including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do
 * so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or 
 * substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION 
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/*******************************************************************
 *
 * @author Daniel.Peintner.EXT@siemens.com
 * @version 2016-02-03 
 * @contact Joerg.Heuer@siemens.com
 *
 * <p>Code generated by EXIdizer</p>
 * <p>Schema: schema-for-json.xsd</p>
 *
 *
 ********************************************************************/



/**
 * \file 	DynamicMemory.h
 * \brief 	Utilities to allocate and free EXI datatypes memory
 *
 */

#ifndef DYNAMIC_MEMORY_H
#define DYNAMIC_MEMORY_H

#ifdef __cplusplus
extern "C" {
#endif

#if MEMORY_ALLOCATION == DYNAMIC_ALLOCATION

#include "EXIConfig.h"
#include "EXITypes.h"


/**
 * \brief 		Allocates memory for at least the length of the string
 *
 * \param       s				UCS String to allocate memory for
 * \param       length			Length
 * \return                  	Error-Code <> 0
 *
 */
int exiAllocateDynamicStringMemory(exi_string_t* s, uint16_t length);


/**
 * \brief 		Allocates memory for at least the length of the string
 *
 * \param       b				Binary to allocate memory for
 * \param      	length			Length
 * \return                  	Error-Code <> 0
 *
 */
int exiAllocateDynamicBinaryMemory(exi_bytes_t* b, uint16_t length);


/**
 * \brief 		Free String Memory (if any)
 *
 * \param       s				UCS String
 * \return                  	Error-Code <> 0
 *
 */
int exiFreeDynamicStringMemory(exi_string_t* s);


/**
 * \brief 		Free Binary Memory (if any)
 *
 * \param       s				UCS String
 * \return                  	Error-Code <> 0
 *
 */
int exiFreeDynamicBinaryMemory(exi_bytes_t* b);



#endif

#ifdef __cplusplus
}
#endif

#endif /* DYNAMIC_ALLOCATION */
